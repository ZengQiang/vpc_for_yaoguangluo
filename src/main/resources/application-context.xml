<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <context:annotation-config/>
    <context:property-placeholder/>
    <context:component-scan base-package="org.lyg.common.*"/>
    <context:component-scan base-package="org.lyg.vpc.*"/>
    <!--aop:aspectj-autoproxy proxy-target-class="true"/-->

    <import resource="classpath*:dataSource.xml"/>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="writeDataSource"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="readDataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath*:mappers/*DAO.xml"></property>
    </bean>

    <bean id="loginDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
                  value="org.lyg.vpc.controller.factory.LoginDAO"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>

    <tx:annotation-driven/>
    <tx:advice id="userTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="transaction*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.RuntimeException"/>
        </tx:attributes>
    </tx:advice>
    <!--bean id="testAspect" class="org.lyg.common.aspects.TestAspect"/-->
    <bean id="dataSourceAspect" class="org.lyg.common.aspects.DataSourceAspect"/>
    <aop:config>
        <aop:advisor order="3" pointcut-ref="delegate" advice-ref="userTxAdvice"/>
        <aop:aspect id="c" order="2" ref="dataSourceAspect">
            <aop:pointcut id="delegate"
                          expression="execution(* org.lyg.vpc.transaction.TransactionDelegate.*(..))"/>
            <aop:before pointcut-ref="delegate" method="before"/>
            <aop:after pointcut-ref="delegate" method="after"/>
        </aop:aspect>
    </aop:config>

    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"></property>
        <property name="hostName" value="192.168.1.107"/>
        <property name="port" value="6379"/>
        <property name="password" value="fengyue1985"/>
        <property name="timeout" value="100000"/>
        <property name="database" value="6"/>
        <constructor-arg index="0" ref="jedisPoolConfig"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300"/>
        <property name="maxIdle" value="100"/>
        <property name="maxWaitMillis" value="1000"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

</beans>